# 📌 Lightweight PHP MVC Framework

A lightweight PHP MVC framework inspired by Laravel. It comes with a simple routing system, controllers, models, migrations, and a basic CLI for code generation — with no external dependencies to download. Pure PHP.

## 🚀 Key Features

- **Expressive routing** with parameters and resource controllers  
- **MVC architecture** (Controllers, Models, Views)  
- **PDO-based database layer**  
- **Migrations system**  
- **Artisan-like CLI** for fast code generation  
- **View rendering** with basic template includes  
- No Composer or package installation required

## 📂 Project Structure

```
MVC/
├── .vscode/                    # VS Code configuration
│   ├── extensions.json
│   └── settings.json
├── app/                        
│   ├── Controllers/            # MVC Controllers
│   ├── Core/                   # Framework core classes
│   │   └── Route.php           # Routing system
│   └── Models/                 # Data models
├── config/                     
│   ├── config.php              # Main configuration (DB, constants…)
│   └── template.php            # Template configuration
├── console/                    
│   └── commands/               # CLI commands
│       ├── controller.php      # Controller generation
│       ├── migrate.php         # Run migrations
│       ├── migration.php       # Create migration
│       ├── model.php           # Model generation
│       └── resource.php        # Resource controller generation
├── database/                   
│   └── migrations/             # Migration files
├── public/                     
│   └── index.php               # Main entry point
├── resources/                  # Views and templates
│   ├── css/                    
│   ├── js/                     
│   └── views/                  
├── routes/                     
│   └── web.php                 # Web routes
├── artisan.php                 # CLI entry point
└── autoload.php                # Autoloader
```

## 🛠 Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/username/mvc.git
   cd mvc
   ```

2. Configure your database in `config/config.php`.

3. Start the development server:
   ```bash
   php -S localhost:8000 -t public
   ```

## 📜 Example Routes

```php
// Basic routing
Route::get('/users', [UserController::class, 'index']);
Route::post('/users', [UserController::class, 'store']);

// Route with parameters
Route::get('/users/{id}', [UserController::class, 'show']);

// Resource routing (creates all CRUD routes)
Route::resource('/posts', PostController::class, 'posts');
```

## 👨‍💻 Example Controller

```php
<?php
namespace App\Controllers;

use App\Models\User;

class UserController extends Controller
{
    public function index()
    {
        $users = (new User)->all();
        return view('users/index', ['users' => $users]);
    }

    public function show(User $user)
    {
        return view('users/show', ['user' => $user]);
    }
}
```

## 🖥 Artisan CLI

```bash
# Generate a basic controller
php artisan.php controller HomeController 

# Generate a controller with CRUD methods
php artisan.php resource PostController 

# Generate a model with migration
php console model Post 

# Create and run a migration
php console migration create_posts_table
php console migrate
```

## 🛑 .gitignore

```
/vendor
/node_modules
/.vscode
.env
.DS_Store
```

## 📚 Documentation

Basic usage is covered above.
A more detailed documentation will be added later.


## 🙏 Acknowledgments

- Inspired by [Laravel Framework](https://laravel.com/)
- Built with modern PHP practices
- Designed for educational use

/*
|--------------------------------------------------------------------------
| Known Issues
|--------------------------------------------------------------------------
| - Due to the current MVC routing and URL rewriting, external CSS/JS
|   files cannot be properly loaded via <link> or <script>.
| - For now, CSS and scripts will remain inline within the view files
|   until a proper asset handling system is implemented.
|
| TODO:
| - Implement a proper asset management solution using absolute URLs
|   or a global constant (e.g. BASE_URL).
*/

**Note**: This framework is inspired by Laravel and aims to provide a similar developer experience while maintaining simplicity and educational value.